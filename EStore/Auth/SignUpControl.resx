<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>